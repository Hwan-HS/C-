using System;
using System.Reflection;

class 대리자
{

    //함수 생성 - 매개변수도 없고, 반환값도 없는 단순 함수
    static void 인사() => Console.WriteLine("안녕하세요.");

    //대리자 생성 - 매개변수도 없고, 반환값도 없는 함수를 대신 실행할 대리자
    delegate void SayDelegete();


    static void Main(string[] args)
    {

        Console.WriteLine("30.대리자(위임/델리게이트)");
        Console.WriteLine("대리자: 한번에 동일한 스타일의 메서드 하나 이상을 대신해서 호출할 수 있는 개념");



        SayDelegete say = 인사; //"인사"함수를 say 이름으로 대신해서 호출
        say(); // 안녕하세요.


        //대리자 선언의 또 다른 방식
        var hi = new SayDelegete(인사);
        hi(); //안녕하세요.
        
    }





}


//30-1 대리자로 함수 대신 호출

class 대리자
{
    //대리자 생성: 매개변수도, 반환값도 없는 함수를 담을 수 있는 포인터
    delegate void Delegate();

    static void HI() => Console.WriteLine("Hello Delegate"); //단순 메서드


    static void Main(string[] args)
    {
        Delegate delegate1 = new Delegate(HI); // Delegate 이름 = new Delegate(메서드 이름)
        delegate1(); //Hello Delegate
        delegate1.Invoke(); //명시적으로 Invoke() 메서드 호출 //Hello Delegate
    }




}
