using System;


class 클래스
{
    
    static void Main(string[] args)
    {
        Console.WriteLine("14.클래스 사용해보기");
        Console.WriteLine("내장 형식 클래스: 닷넷 프레임워크에서 만들어 놓은 내장 형식");
        Console.WriteLine("사용자 정의 형식 클래스: 사용자가 직접 만드는 클래스");
    }
    

    
    static void Main(string[] args)
    {
        Console.WriteLine("14-1 클래스 레벨의 메서드 호출하기");
        HI();       //메서드 레벨에서 HI 메서드 호출 메서드()
        클래스.HI();//클래스 레벨에서 HI 메서드 호출 클래스.메서드()
    }
    
    static void HI() //static이 붙으니 "정적 메서드"
    {
        Console.WriteLine("클래스의 HI 메서드를 호출했습니다.");

    }
    

    static void Main(string[] args)
    {
        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("14-2 정적 메서드와 인스턴스 메서드");
        Console.WriteLine("static이 붙으면 정적 메서드, 아니라면 인스턴스 메서드");
        클래스.정적메서드(); //정적 메서드 호출

        클래스 인스턴스_메서드 = new 클래스(); //인스턴스 메서드 호출
        인스턴스_메서드.인스턴스메서드();
        

    }

    static void 정적메서드()
    {
        Console.WriteLine("정적 메서드입니다.");
    }

    void 인스턴스메서드()
    {
        Console.WriteLine("인스턴스메서드입니다.");
    }
    
}


class 메인_클래스
{
    static void Main()
    {
        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("14-3 클래스 여러개 생성해서 호출하기");

        공유_클래스.공유(); // 다른 클래스에서 호출하기
    }
}
public class 공유_클래스 //외부(public)로 공유 가능한 클래스
{
    public static void 공유() //외부(public)로 공유 가능한 메서드
    {
        Console.WriteLine("클래스");
    }
}

class 클래스2
{
    static void Main(string[] args)
    {
        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("14-4 Environment 클래스로 프로그램 강제 종료하기");

        Console.WriteLine("출력된다!");
        Environment.Exit(0);             //강제 종료
        Console.WriteLine("출력 되니?"); //실행되지 않음


        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("14-5 환경 변수(Environment) 사용해보기");

        Console.WriteLine(Environment.SystemDirectory); //시스템 폴더
        Console.WriteLine(Environment.Version);         //닷넷 기준 버전
        Console.WriteLine(Environment.OSVersion);       //운영 체제 버전
        Console.WriteLine(Environment.MachineName);     //컴퓨터 이름
        Console.WriteLine(Environment.UserName);        //사용자이름
        Console.WriteLine(Environment.CurrentDirectory);//현재 폴더
    }

}

class exe파일_실행하기
{
    static void Main(string[] args)
    {
        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("14-6 EXE 파일 실행하기");
        Process.Start("Notepad.exe"); //Process 클래스로 메모장 실행하기
        Process.Start("Explorer.exe", "https://naver.com"); //네이버 실행
    }
}
*/

class 랜덤
{
    static void Main(string[] args)
    {
        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("14-7 Random 클래스 실행해 임의의 정수 출력하기");
        Random random = new Random(); //Random 클래스는 인스턴스의 값을 새롭게 선언을 해줘야됨
        Console.WriteLine(random.Next()); // 무작위 수 출력
        Console.WriteLine($"0~4 출력해보기: {random.Next(5)}"); //0~4
        Console.WriteLine($"1~100까지의 무작위 수 출력: {random.Next(1, 101)}"); //1~100


        // 로또 번호 추첨기 만들어보기

        Console.WriteLine("이번 주의 로또!");
        Random roto = new Random();
        int[] 번호 = new int[6];
        int 숫자 = 0;


        for (int i = 0; i < 6; i++) //로또 추첨기
        {
            숫자 = roto.Next(1, 46); //숫자에 1~45의 무작위 수 입력하기
            bool 스위치 = false; // 기본값 false. 회차마다 false로 변한다

            if (i > 0 && i < 6)
            {

                for (int j = 0; j < i; j++)
                {

                    if (번호[j] == 숫자) // 중복안된 숫자와 이번 회차 떄 뽑은 번호를 대조해 같으면 스위치 on
                    {
                        스위치 = true;
                    }

                }

            }

            if (스위치) //중복될 시 i를 감소시켜 다시 돌리게 함
            {
                --i;
            }
            else
            {
                번호[i] = 숫자; //중복이 없을 시 번호 하나씩 입력
            }

        }


        for (int i = 0; i < 6; i++) //출력문
        {
            Console.WriteLine($"{i+1}번 번호: {번호[i]}"); 
        }


    }
}
