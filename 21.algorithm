using System;
using System.Linq;

class 알고리즘
{

    static void Main(string[] args)
    {
        Console.WriteLine("21.알고리즘 - 프로그래밍을 할 때 생긴 문제의 해결 방법을 체계적으로 정리한 것");
        Console.WriteLine("입력 -> 처리 -> 출력");
        Console.WriteLine("입력: 자료 구조가 담당하는 영역(변수 및 배열의 데이터를 사용하는 영역)");
        Console.WriteLine("처리: 알고리즘 처리 영역");
        Console.WriteLine("출력: 화면에 보이는 UI를 담당하는 영역");


        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("21-1 합계 구하기: Sum 알고리즘");
        int[] 점수 = { 100, 95, 65, 40, 75 };
        int sum = 0;
        int sum2 = 0;


        //전체 학생의 총 점수
        for (int i = 0; i < 점수.Length; i++)
        {
            sum += 점수[i];
        }
        Console.WriteLine($"점수의 합계: {sum}");



        //80점 이상의 점수만 합치기
        for (int i = 0; i < 점수.Length; i++)
        {
            if (점수[i] > 80)
            {
                sum2 += 점수[i];
            }

        }
        Console.WriteLine($"80점 이상의 점수의 합계: {sum2}");


        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("21-2 개수 구하기: Count 알고리즘");

        var 정수 = Enumerable.Range(1, 1000).ToArray();
        int 카운트 = 0;

        for (int i = 0; i < 정수.Length; i++)
        {

            if (정수[i] % 13 == 0) //13의 배수만 걸러내는 필터링
            {
                카운트++;
            }

        }
        Console.WriteLine($"1~1000까지 에서의 13의 배수: {카운트}"); //76


        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("21-3 평균 구하기: AVERAGE 알고리즘");

        int[] 점수1 = { 90, 65, 78, 50, 95 };
        int 합계 = 0;
        double 평균 = 0;


        for (int i = 0; i < 점수1.Length; i++) 
        {
            합계 += 점수1[i];
        }

        평균 = 합계 / ((double)점수1.Length);
        Console.WriteLine($"총 점수: {합계}");
        Console.WriteLine($"평균값: {평균:0.00}");

        
        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("21-4 최대값 구하기: MAX 알고리즘");

        int max = int.MinValue; //최소값 
        int[] 점수2 = { -2, -5, -3, -7, -1 };

        for (int i = 0; i < 점수2.Length; i++)
        {
            if (점수2[i] > max)
            {
                max = 점수2[i];
            }
        }
        Console.WriteLine($"최대값: {max}");
        Console.WriteLine($"최대값(식): {점수2.Max()}");

        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("21-5 최솟값 구하기: MIN 알고리즘");

        //짝수중의 최솟값 찾기

        int min = int.MaxValue; //최대값 담기
        int[] 점수3 = { 2, 5, 3, 7, 1 };

        for (int i = 0; i < 점수3.Length; i++)
        {
            if (점수2[i] < min && 점수2[i] % 2 == 0)
            {
                min = 점수3[i];
            }
        }

        Console.WriteLine($"최솟값: {min}"); //2
        Console.WriteLine($"최솟값(식):{점수3.Where(x => x % 2 == 0).Min()}"); //2
        
        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("21-6 근삿값 구하기: NEAR 알고리즘");

        int 절대값(int 숫자) => (숫자 < 0) ? -숫자 : 숫자; //절대값 구하기 함수

        int minn = int.MaxValue;

        int[] 점수4 = { 10, 20, 30, 27, 17 };
        int 타겟 = 25; //25와 차이가 가장 적은 수
        int 근삿값 = default; //기본 값. 즉 0


        for (int i = 0; i < 점수4.Length; i++)
        {
            int 차이 = 절대값(점수4[i] - 타겟);

            if (차이 < minn)
            {
                minn = 차이;
                근삿값 = 점수4[i];
            }
        }

        Console.WriteLine($"{근삿값}, 차이: {minn}");//27, 차이: 2
        var minimum = 점수4.Min(m => Math.Abs(m - 타겟)); //배열 - 타겟으로 가장 작은 수를 minimum에 담기
        var closest = 점수4.First(m => Math.Abs(타겟 - m) == minimum); //타겟 - m의 값과 minimum과 같은 값을 출력
        Console.WriteLine($"{closest}, 차이: {minimum}"); //27, 차이: 2

        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("21-7 순위 구하기: RANK 알고리즘");

        int[] 점수5 = { 90, 87, 100, 95, 80 };
        int[] 랭킹 = Enumerable.Range(1, 5).ToArray();

        for (int i = 0; i < 점수5.Length; i++)
        {
            랭킹[i] = 1;
            for (int j = 0; j < 점수5.Length; j++)
            {
                if (점수5[i] < 점수5[j])
                {
                    랭킹[i]++;
                }
            }
        }

        for (int i = 0; i < 점수5.Length; i++)
        {
            Console.WriteLine($"[{랭킹[i]}]위: {점수5[i]}점");
            /*
            [3]위: 90점
            [4]위: 87점
            [1]위: 100점
            [2]위: 95점
            [5]위: 80점
            */
        }

        Console.WriteLine("ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
        Console.WriteLine("21-8 순서대로 나열하기: SORT 알고리즘");

        int[] 점수6 = { 32, 13, 54, 100, 67};
        int 크기 = 점수6.Length;

        for (int i = 0; i < 크기 - 1; i++) //i = 0 to 크기 - 1
        {
            for (int j = i + 1; j < 크기; j++) //j = i + 1 to 크기
            {
                if (점수6[i] > 점수6[j]) // > 오름차순, < 내림차순
                {
                    //배열 스왑
                    int 스왑 = 점수6[i]; //스왑 변수에 점수6[i]의 값 저장
                    점수6[i] = 점수6[j]; //점수6[j]의 값을 점수6[i]로 스왑
                    점수6[j] = 스왑; //저장한 점수6[i]의 값을 점수6[j]로 스왑
                }
            }
        }

        for (int i = 0; i < 점수6.Length; i++)
        {
            Console.WriteLine($"{점수6[i]}");
            /*13
              32
              54
              67
              100 */
        }



    }
}
